{"name": "test_place_order_login_before_checkout", "status": "failed", "statusDetails": {"message": "AssertionError: Locator expected to have text 'Congratulations! Your order has been confirmed!'\nActual value: <element(s) not found> \nCall log:\n  - Expect \"to_have_text\" with timeout 5000ms\n  - waiting for locator(\"p.alert-success\").first", "trace": "page = <Page url='https://automationexercise.com/payment_done/500'>\n\n    @allure.feature(\"UI: Place Order\")\n    @allure.story(\"Place order after login\")\n    @pytest.mark.order_flow\n    def test_place_order_login_before_checkout(page):\n        with allure.step(\"Open homepage and verify\"):\n            page.goto(\"http://automationexercise.com\")\n            expect(page.locator(\"html\")).to_be_visible()\n    \n        with allure.step(\"Login\"):\n            page.locator(\"a[href='/login']\").click()\n            page.fill(\"input[data-qa='login-email']\", EMAIL)\n            page.fill(\"input[data-qa='login-password']\", PASSWORD)\n            page.locator(\"button[data-qa='login-button']\").click()\n            expect(page.locator(\"a:has-text('Logged in as')\")).to_be_visible()\n    \n        with allure.step(\"Add products and go to cart\"):\n            page.goto(\"https://automationexercise.com/products\")\n            page.hover(\"div.single-products\")\n            page.locator(\"a[data-product-id='1']\").first.click()\n            page.wait_for_selector(\"#cartModal\")\n            page.locator(\"button[data-dismiss='modal']\").click()\n            page.locator(\"a[href='/view_cart']\").first.click()\n            page.get_by_text(\"Proceed To Checkout\").click()\n    \n        with allure.step(\"Fill order form and place order\"):\n            expect(page.locator(\"h2:has-text('Address Details')\")).to_be_visible()\n            page.fill(\"textarea[name='message']\", \"Please deliver ASAP\")\n            place_order_button = page.locator(\"a[href='/payment']\")\n            place_order_button.scroll_into_view_if_needed()\n            place_order_button.click()\n    \n        with allure.step(\"Fill payment form and confirm\"):\n            page.fill(\"input[name='name_on_card']\", \"QA Test User\")\n            page.fill(\"input[name='card_number']\", \"4111111111111111\")\n            page.fill(\"input[name='cvc']\", \"123\")\n            page.fill(\"input[name='expiry_month']\", \"12\")\n            page.fill(\"input[name='expiry_year']\", \"2026\")\n            page.locator(\"button#submit\").click()\n    \n        with allure.step(\"Verify success message\"):\n            success_message = page.locator(\"p.alert-success\").first\n>           expect(success_message).to_have_text(\"Congratulations! Your order has been confirmed!\")\nE           AssertionError: Locator expected to have text 'Congratulations! Your order has been confirmed!'\nE           Actual value: <element(s) not found> \nE           Call log:\nE             - Expect \"to_have_text\" with timeout 5000ms\nE             - waiting for locator(\"p.alert-success\").first\n\nui_test.py:143: AssertionError"}, "steps": [{"name": "Open homepage and verify", "status": "passed", "start": 1751975463005, "stop": 1751975471345}, {"name": "Login", "status": "passed", "start": 1751975471345, "stop": 1751975472982}, {"name": "Add products and go to cart", "status": "passed", "start": 1751975472982, "stop": 1751975481077}, {"name": "Fill order form and place order", "status": "passed", "start": 1751975481077, "stop": 1751975481545}, {"name": "Fill payment form and confirm", "status": "passed", "start": 1751975481545, "stop": 1751975483188}, {"name": "Verify success message", "status": "failed", "statusDetails": {"message": "AssertionError: Locator expected to have text 'Congratulations! Your order has been confirmed!'\nActual value: <element(s) not found> \nCall log:\n  - Expect \"to_have_text\" with timeout 5000ms\n  - waiting for locator(\"p.alert-success\").first\n\n", "trace": "  File \"C:\\Users\\Sergey Semenovich\\PycharmProjects\\PythonProject\\PythonProject\\AutomationExercise\\tests\\ui\\ui_test.py\", line 143, in test_place_order_login_before_checkout\n    expect(success_message).to_have_text(\"Congratulations! Your order has been confirmed!\")\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sergey Semenovich\\PycharmProjects\\PythonProject\\PythonProject\\AutomationExercise\\.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 19939, in to_have_text\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.to_have_text(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<4 lines>...\n        )\n        ^\n    )\n    ^\n  File \"C:\\Users\\Sergey Semenovich\\PycharmProjects\\PythonProject\\PythonProject\\AutomationExercise\\.venv\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Users\\Sergey Semenovich\\PycharmProjects\\PythonProject\\PythonProject\\AutomationExercise\\.venv\\Lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 537, in to_have_text\n    await self._expect_impl(\n    ...<9 lines>...\n    )\n  File \"C:\\Users\\Sergey Semenovich\\PycharmProjects\\PythonProject\\PythonProject\\AutomationExercise\\.venv\\Lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 75, in _expect_impl\n    raise AssertionError(\n        f\"{out_message}\\nActual value: {actual} {format_call_log(result.get('log'))}\"\n    )\n"}, "start": 1751975483188, "stop": 1751975488193}], "start": 1751975463005, "stop": 1751975488195, "uuid": "20b1de65-bff7-4f6d-b036-19e8313247d3", "historyId": "7a8ee92266ad6143153a3f3d44f4aa64", "testCaseId": "7a8ee92266ad6143153a3f3d44f4aa64", "fullName": "tests.ui.ui_test#test_place_order_login_before_checkout", "labels": [{"name": "story", "value": "Place order after login"}, {"name": "feature", "value": "UI: Place Order"}, {"name": "tag", "value": "order_flow"}, {"name": "parentSuite", "value": "tests.ui"}, {"name": "suite", "value": "ui_test"}, {"name": "host", "value": "WS01797"}, {"name": "thread", "value": "22724-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.ui_test"}]}