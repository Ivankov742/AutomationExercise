{"name": "test_place_order_login_before_checkout", "status": "failed", "statusDetails": {"message": "AssertionError: Locator expected to be visible\nActual value: <element(s) not found> \nCall log:\n  - Expect \"to_be_visible\" with timeout 10000ms\n  - waiting for get_by_text(\"Your order has been placed successfully!\")", "trace": "page = <Page url='https://automationexercise.com/payment_done/500'>\n\n    @pytest.mark.order_flow\n    def test_place_order_login_before_checkout(page):\n        # Step 1: Open homepage\n        page.goto(\"http://automationexercise.com\")\n        expect(page.locator(\"html\")).to_be_visible()\n    \n        # Step 2: Login\n        page.locator(\"a[href='/login']\").click()\n        page.fill(\"input[data-qa='login-email']\", EMAIL)\n        page.fill(\"input[data-qa='login-password']\", PASSWORD)\n        page.locator(\"button[data-qa='login-button']\").click()\n        expect(page.locator(\"a:has-text('Logged in as')\")).to_be_visible()\n        logger.info(\"✅ Logged in successfully\")\n    \n        # Step 3: Add products\n        page.goto(\"https://automationexercise.com/products\")\n        page.hover(\"div.single-products\")\n        page.locator(\"a[data-product-id='1']\").first.click()\n        page.wait_for_selector(\"#cartModal\")\n        page.locator(\"button[data-dismiss='modal']\").click()\n        logger.info(\"✅ Product added to cart\")\n    \n        # Step 4: Go to cart and proceed to checkout\n        cart_button = page.locator(\"a[href='/view_cart']\").first\n        cart_button.wait_for(state=\"visible\", timeout=5000)\n        cart_button.click()\n        expect(page.locator(\"li.active:has-text('Shopping Cart')\")).to_be_visible()\n        page.get_by_text(\"Proceed To Checkout\").click()\n        logger.info(\"✅ On cart page\")\n    \n        # Step 5: Verify Address & Review sections\n        expect(page.locator(\"h2:has-text('Address Details')\")).to_be_visible()\n        expect(page.locator(\"h2:has-text('Review Your Order')\")).to_be_visible()\n        logger.info(\"✅ Address and Order Review visible\")\n    \n        # Step 6: Fill comment\n        message_box = page.locator(\"textarea[name='message']\")\n        message_box.wait_for(state=\"visible\", timeout=5000)\n        message_box.fill(\"Please deliver ASAP\")\n        logger.info(\"✅ Filled order comment\")\n    \n        # Step 7: Click 'Place Order'\n        place_order_button = page.locator(\"a[href='/payment']\")\n        place_order_button.scroll_into_view_if_needed()\n        place_order_button.wait_for(state=\"visible\", timeout=5000)\n    \n        # Try normal click first, fallback to force click\n        try:\n            place_order_button.click(timeout=5000)\n        except:\n            logger.warning(\"⚠️ Normal click failed, forcing click.\")\n            place_order_button.click(force=True)\n    \n        logger.info(\"✅ Navigated to payment page\")\n    \n        # Step 8: Fill payment details\n        page.fill(\"input[name='name_on_card']\", \"QA Test User\")\n        page.fill(\"input[name='card_number']\", \"4111111111111111\")\n        page.fill(\"input[name='cvc']\", \"123\")\n        page.fill(\"input[name='expiry_month']\", \"12\")\n        page.fill(\"input[name='expiry_year']\", \"2026\")\n        page.locator(\"button#submit\").click()\n    \n        # Step 9: Verify order success message\n        page.wait_for_timeout(2000)  # short wait for page to update\n        logger.info(f\"Current URL after payment: {page.url}\")\n        page.screenshot(path=\"payment_result.png\")\n    \n        # More tolerant locator\n        success_message = page.get_by_text(\"Your order has been placed successfully!\")\n>       expect(success_message).to_be_visible(timeout=10000)\nE       AssertionError: Locator expected to be visible\nE       Actual value: <element(s) not found> \nE       Call log:\nE         - Expect \"to_be_visible\" with timeout 10000ms\nE         - waiting for get_by_text(\"Your order has been placed successfully!\")\n\nui_test.py:222: AssertionError"}, "start": 1751974860536, "stop": 1751974892485, "uuid": "6fea3584-226a-4df2-ad24-f7a2c915a84b", "historyId": "7a8ee92266ad6143153a3f3d44f4aa64", "testCaseId": "7a8ee92266ad6143153a3f3d44f4aa64", "fullName": "tests.ui.ui_test#test_place_order_login_before_checkout", "labels": [{"name": "tag", "value": "order_flow"}, {"name": "parentSuite", "value": "tests.ui"}, {"name": "suite", "value": "ui_test"}, {"name": "host", "value": "WS01797"}, {"name": "thread", "value": "12944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.ui_test"}]}